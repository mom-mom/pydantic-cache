[project]
name = "pydantic-cache"
version = "0.1.0"
description = "Async cache library for Pydantic models without FastAPI dependencies"
authors = [{name = "Your Name", email = "your.email@example.com"}]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.13,<4.0"
dependencies = [
    "pydantic>=2.11.7",
    "redis>=5.0.0",
    "pendulum>=3.0.0",
]

[dependency-groups]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "ruff>=0.12.8",
]

[build-system]
requires = ["setuptools>=61", "wheel"]
build-backend = "setuptools.build_meta"

[tool.ruff]
line-length = 120
target-version = "py313"
fix = true
output-format = "grouped"

[tool.ruff.lint]
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "N",    # pep8-naming
    "UP",   # pyupgrade
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "DTZ",  # flake8-datetimez
    "T10",  # flake8-debugger
    "RUF",  # Ruff-specific rules
    "SIM",  # flake8-simplify
    "TID",  # flake8-tidy-imports
    "PTH",  # flake8-use-pathlib
    "ERA",  # eradicate
    "PL",   # Pylint
]
ignore = [
    "PLR0913",  # Too many arguments
    "PLR2004",  # Magic value used in comparison
    "SIM108",   # Use ternary operator
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.lint.isort]
known-first-party = ["pydantic_cache"]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101", "S324"]  # Allow assert and hashlib.md5 in tests
